// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="qemulator_qemulator,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.592625,HLS_SYN_LAT=17,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=290,HLS_SYN_LUT=295,HLS_VERSION=2022_1}" *)

module qemulator (
        ap_clk,
        ap_rst,
        action1,
        action1_ap_vld,
        action2,
        action2_ap_vld,
        reward1,
        reward1_ap_vld,
        reward2,
        reward2_ap_vld
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input  [8:0] action1;
input   action1_ap_vld;
input  [8:0] action2;
input   action2_ap_vld;
output  [15:0] reward1;
output   reward1_ap_vld;
output  [15:0] reward2;
output   reward2_ap_vld;

reg reward1_ap_vld;
reg reward2_ap_vld;

reg   [8:0] action1_preg;
reg   [8:0] action1_in_sig;
reg    action1_ap_vld_preg;
reg    action1_ap_vld_in_sig;
reg   [8:0] action2_preg;
reg   [8:0] action2_in_sig;
reg    action2_ap_vld_preg;
reg    action2_ap_vld_in_sig;
wire   [3:0] cos_hw_address0;
reg    cos_hw_ce0;
wire   [15:0] cos_hw_q0;
wire   [3:0] cos_hw_address1;
reg    cos_hw_ce1;
wire   [15:0] cos_hw_q1;
wire   [3:0] cos_hw_address2;
reg    cos_hw_ce2;
wire   [15:0] cos_hw_q2;
wire   [3:0] cos_hw_address3;
reg    cos_hw_ce3;
wire   [15:0] cos_hw_q3;
wire   [3:0] sin_hw_address0;
reg    sin_hw_ce0;
wire   [15:0] sin_hw_q0;
wire   [3:0] sin_hw_address1;
reg    sin_hw_ce1;
wire   [15:0] sin_hw_q1;
wire   [3:0] sin_hw_address2;
reg    sin_hw_ce2;
wire   [15:0] sin_hw_q2;
wire   [3:0] sin_hw_address3;
reg    sin_hw_ce3;
wire   [15:0] sin_hw_q3;
reg    action1_blk_n;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    action2_blk_n;
reg  signed [15:0] sin_hw_load_reg_958;
wire    ap_CS_fsm_state2;
wire  signed [29:0] sext_ln1319_fu_256_p1;
wire  signed [29:0] sext_ln1319_1_fu_260_p1;
wire  signed [29:0] sext_ln1319_2_fu_264_p1;
reg  signed [29:0] sext_ln1319_2_reg_975;
wire  signed [29:0] sext_ln1319_3_fu_268_p1;
reg  signed [15:0] sin_hw_load_2_reg_989;
wire  signed [29:0] sext_ln1319_4_fu_272_p1;
wire  signed [29:0] sext_ln1319_5_fu_276_p1;
wire  signed [29:0] sext_ln1319_6_fu_280_p1;
reg  signed [29:0] sext_ln1319_6_reg_1006;
wire  signed [29:0] sext_ln1319_7_fu_284_p1;
wire    ap_CS_fsm_state5;
wire  signed [29:0] sext_ln1319_11_fu_382_p1;
wire  signed [29:0] sext_ln1319_15_fu_398_p1;
reg   [15:0] output_state_V_4_reg_1072;
wire    ap_CS_fsm_state14;
reg   [15:0] output_state_V_6_reg_1077;
wire  signed [29:0] sext_ln1319_18_fu_602_p1;
wire  signed [29:0] sext_ln1319_20_fu_606_p1;
wire  signed [29:0] sext_ln1319_19_fu_610_p1;
wire    ap_CS_fsm_state15;
wire  signed [29:0] sext_ln1319_21_fu_613_p1;
wire  signed [29:0] grp_fu_888_p2;
wire    ap_CS_fsm_state17;
wire  signed [29:0] grp_fu_894_p2;
wire   [63:0] zext_ln587_fu_208_p1;
wire   [63:0] zext_ln587_1_fu_226_p1;
wire   [63:0] zext_ln587_2_fu_232_p1;
wire   [63:0] zext_ln587_3_fu_250_p1;
reg    ap_block_state1;
wire    ap_CS_fsm_state18;
wire   [3:0] a1_V_fu_188_p4;
wire   [2:0] trunc_ln1540_fu_214_p1;
wire   [3:0] ret_V_fu_218_p3;
wire   [3:0] a2_V_fu_198_p4;
wire   [2:0] trunc_ln1540_1_fu_238_p1;
wire   [3:0] ret_V_1_fu_242_p3;
wire  signed [15:0] sext_ln1319_1_fu_260_p0;
wire  signed [15:0] sext_ln1319_5_fu_276_p0;
wire  signed [29:0] grp_fu_708_p2;
wire  signed [29:0] grp_fu_715_p2;
wire  signed [29:0] grp_fu_722_p2;
wire  signed [29:0] grp_fu_729_p2;
wire  signed [29:0] grp_fu_736_p2;
wire  signed [29:0] grp_fu_743_p2;
wire  signed [29:0] grp_fu_750_p2;
wire  signed [29:0] grp_fu_757_p2;
wire  signed [15:0] u2_V_2_fu_334_p4;
wire  signed [15:0] u2_V_4_fu_352_p4;
wire  signed [15:0] u2_V_3_fu_343_p4;
wire   [15:0] u1_V_6_fu_288_p2;
wire  signed [15:0] u2_V_5_fu_361_p4;
wire  signed [15:0] u1_V_7_fu_293_p4;
wire  signed [15:0] u1_V_9_fu_311_p4;
wire   [15:0] u2_V_1_fu_329_p2;
wire  signed [15:0] u1_V_8_fu_302_p4;
wire  signed [15:0] u1_V_10_fu_320_p4;
wire  signed [29:0] grp_fu_764_p2;
wire    ap_CS_fsm_state8;
wire  signed [29:0] grp_fu_770_p2;
wire  signed [29:0] grp_fu_776_p2;
wire  signed [29:0] grp_fu_783_p2;
wire  signed [29:0] grp_fu_790_p2;
wire  signed [29:0] grp_fu_796_p2;
wire  signed [29:0] grp_fu_802_p2;
wire  signed [29:0] grp_fu_809_p2;
wire  signed [15:0] st_gate_V_fu_410_p4;
wire  signed [15:0] st_gate_V_10_fu_437_p4;
wire  signed [15:0] st_gate_V_8_fu_419_p4;
wire  signed [15:0] st_gate_V_9_fu_428_p4;
wire  signed [15:0] st_gate_V_11_fu_446_p4;
wire  signed [15:0] st_gate_V_14_fu_473_p4;
wire  signed [15:0] st_gate_V_12_fu_455_p4;
wire  signed [15:0] st_gate_V_13_fu_464_p4;
wire  signed [29:0] grp_fu_816_p3;
wire    ap_CS_fsm_state11;
wire  signed [29:0] grp_fu_825_p3;
wire  signed [29:0] grp_fu_834_p3;
wire  signed [29:0] grp_fu_843_p3;
wire   [15:0] quantum_state_V_fu_514_p4;
wire   [15:0] quantum_state_V_3_fu_541_p4;
wire   [15:0] quantum_state_V_1_fu_523_p4;
wire   [15:0] quantum_state_V_2_fu_532_p4;
wire  signed [29:0] grp_fu_852_p3;
wire  signed [29:0] grp_fu_861_p3;
wire  signed [29:0] grp_fu_870_p3;
wire  signed [29:0] grp_fu_879_p3;
wire   [15:0] output_state_V_fu_566_p4;
wire   [15:0] output_state_V_5_fu_584_p4;
wire  signed [29:0] grp_fu_909_p3;
wire   [15:0] tmp_2_fu_616_p4;
wire   [27:0] shl_ln1319_1_fu_633_p3;
wire   [29:0] shl_ln_fu_625_p3;
wire  signed [29:0] sext_ln1319_22_fu_641_p1;
wire   [29:0] r_V_14_fu_645_p2;
wire  signed [29:0] grp_fu_900_p3;
wire   [15:0] tmp_4_fu_662_p4;
wire   [27:0] shl_ln1319_3_fu_679_p3;
wire   [29:0] shl_ln1319_2_fu_671_p3;
wire  signed [29:0] sext_ln1319_23_fu_687_p1;
wire   [29:0] r_V_15_fu_691_p2;
wire  signed [15:0] grp_fu_708_p0;
wire  signed [15:0] grp_fu_708_p1;
wire  signed [15:0] grp_fu_715_p0;
wire  signed [15:0] grp_fu_715_p1;
wire  signed [15:0] grp_fu_722_p0;
wire  signed [15:0] grp_fu_722_p1;
wire  signed [15:0] grp_fu_729_p0;
wire  signed [15:0] grp_fu_729_p1;
wire  signed [15:0] grp_fu_736_p0;
wire  signed [15:0] grp_fu_736_p1;
wire  signed [15:0] grp_fu_743_p0;
wire  signed [15:0] grp_fu_743_p1;
wire  signed [15:0] grp_fu_750_p0;
wire  signed [15:0] grp_fu_750_p1;
wire  signed [15:0] grp_fu_757_p0;
wire  signed [15:0] grp_fu_757_p1;
wire  signed [15:0] grp_fu_764_p1;
wire  signed [15:0] grp_fu_770_p1;
wire  signed [15:0] grp_fu_776_p1;
wire  signed [15:0] grp_fu_783_p1;
wire  signed [15:0] grp_fu_790_p1;
wire  signed [15:0] grp_fu_796_p1;
wire  signed [15:0] grp_fu_802_p0;
wire  signed [15:0] grp_fu_809_p1;
wire   [13:0] grp_fu_816_p2;
wire   [13:0] grp_fu_825_p2;
wire   [13:0] grp_fu_834_p2;
wire   [13:0] grp_fu_843_p2;
wire  signed [15:0] grp_fu_852_p0;
wire  signed [16:0] sext_ln1393_fu_550_p1;
wire  signed [15:0] grp_fu_852_p1;
wire  signed [16:0] sext_ln1393_1_fu_554_p1;
wire   [13:0] grp_fu_852_p2;
wire  signed [15:0] grp_fu_861_p0;
wire  signed [16:0] sext_ln1394_fu_558_p1;
wire  signed [15:0] grp_fu_861_p1;
wire  signed [16:0] sext_ln1394_1_fu_562_p1;
wire   [13:0] grp_fu_861_p2;
wire  signed [15:0] grp_fu_870_p0;
wire  signed [15:0] grp_fu_870_p1;
wire   [13:0] grp_fu_870_p2;
wire  signed [15:0] grp_fu_879_p0;
wire  signed [15:0] grp_fu_879_p1;
wire   [13:0] grp_fu_879_p2;
wire  signed [15:0] grp_fu_888_p0;
wire  signed [15:0] grp_fu_888_p1;
wire  signed [15:0] grp_fu_894_p0;
wire  signed [15:0] grp_fu_894_p1;
wire  signed [15:0] grp_fu_900_p0;
wire  signed [15:0] grp_fu_900_p1;
wire  signed [15:0] grp_fu_909_p0;
wire  signed [15:0] grp_fu_909_p1;
reg   [17:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 action1_preg = 9'd0;
#0 action1_ap_vld_preg = 1'b0;
#0 action2_preg = 9'd0;
#0 action2_ap_vld_preg = 1'b0;
#0 ap_CS_fsm = 18'd1;
end

qemulator_cos_hw_ROM_AUTO_1R #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
cos_hw_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cos_hw_address0),
    .ce0(cos_hw_ce0),
    .q0(cos_hw_q0),
    .address1(cos_hw_address1),
    .ce1(cos_hw_ce1),
    .q1(cos_hw_q1),
    .address2(cos_hw_address2),
    .ce2(cos_hw_ce2),
    .q2(cos_hw_q2),
    .address3(cos_hw_address3),
    .ce3(cos_hw_ce3),
    .q3(cos_hw_q3)
);

qemulator_sin_hw_ROM_AUTO_1R #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
sin_hw_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sin_hw_address0),
    .ce0(sin_hw_ce0),
    .q0(sin_hw_q0),
    .address1(sin_hw_address1),
    .ce1(sin_hw_ce1),
    .q1(sin_hw_q1),
    .address2(sin_hw_address2),
    .ce2(sin_hw_ce2),
    .q2(sin_hw_q2),
    .address3(sin_hw_address3),
    .ce3(sin_hw_ce3),
    .q3(sin_hw_q3)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_708_p0),
    .din1(grp_fu_708_p1),
    .ce(1'b1),
    .dout(grp_fu_708_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_715_p0),
    .din1(grp_fu_715_p1),
    .ce(1'b1),
    .dout(grp_fu_715_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_722_p0),
    .din1(grp_fu_722_p1),
    .ce(1'b1),
    .dout(grp_fu_722_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_729_p0),
    .din1(grp_fu_729_p1),
    .ce(1'b1),
    .dout(grp_fu_729_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_736_p0),
    .din1(grp_fu_736_p1),
    .ce(1'b1),
    .dout(grp_fu_736_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_743_p0),
    .din1(grp_fu_743_p1),
    .ce(1'b1),
    .dout(grp_fu_743_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_750_p0),
    .din1(grp_fu_750_p1),
    .ce(1'b1),
    .dout(grp_fu_750_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_757_p0),
    .din1(grp_fu_757_p1),
    .ce(1'b1),
    .dout(grp_fu_757_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u2_V_2_fu_334_p4),
    .din1(grp_fu_764_p1),
    .ce(1'b1),
    .dout(grp_fu_764_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u2_V_4_fu_352_p4),
    .din1(grp_fu_770_p1),
    .ce(1'b1),
    .dout(grp_fu_770_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u2_V_3_fu_343_p4),
    .din1(grp_fu_776_p1),
    .ce(1'b1),
    .dout(grp_fu_776_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u2_V_5_fu_361_p4),
    .din1(grp_fu_783_p1),
    .ce(1'b1),
    .dout(grp_fu_783_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u1_V_7_fu_293_p4),
    .din1(grp_fu_790_p1),
    .ce(1'b1),
    .dout(grp_fu_790_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u1_V_9_fu_311_p4),
    .din1(grp_fu_796_p1),
    .ce(1'b1),
    .dout(grp_fu_796_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_802_p0),
    .din1(u1_V_8_fu_302_p4),
    .ce(1'b1),
    .dout(grp_fu_802_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u1_V_10_fu_320_p4),
    .din1(grp_fu_809_p1),
    .ce(1'b1),
    .dout(grp_fu_809_p2)
);

qemulator_am_addmul_16s_16s_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
am_addmul_16s_16s_14ns_30_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(st_gate_V_10_fu_437_p4),
    .din1(st_gate_V_fu_410_p4),
    .din2(grp_fu_816_p2),
    .ce(1'b1),
    .dout(grp_fu_816_p3)
);

qemulator_am_submul_16s_16s_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
am_submul_16s_16s_14ns_30_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(st_gate_V_8_fu_419_p4),
    .din1(st_gate_V_9_fu_428_p4),
    .din2(grp_fu_825_p2),
    .ce(1'b1),
    .dout(grp_fu_825_p3)
);

qemulator_am_addmul_16s_16s_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
am_addmul_16s_16s_14ns_30_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(st_gate_V_14_fu_473_p4),
    .din1(st_gate_V_11_fu_446_p4),
    .din2(grp_fu_834_p2),
    .ce(1'b1),
    .dout(grp_fu_834_p3)
);

qemulator_am_submul_16s_16s_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
am_submul_16s_16s_14ns_30_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(st_gate_V_12_fu_455_p4),
    .din1(st_gate_V_13_fu_464_p4),
    .din2(grp_fu_843_p2),
    .ce(1'b1),
    .dout(grp_fu_843_p3)
);

qemulator_am_addmul_16s_16s_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
am_addmul_16s_16s_14ns_30_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_852_p0),
    .din1(grp_fu_852_p1),
    .din2(grp_fu_852_p2),
    .ce(1'b1),
    .dout(grp_fu_852_p3)
);

qemulator_am_submul_16s_16s_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
am_submul_16s_16s_14ns_30_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_861_p0),
    .din1(grp_fu_861_p1),
    .din2(grp_fu_861_p2),
    .ce(1'b1),
    .dout(grp_fu_861_p3)
);

qemulator_am_addmul_16s_16s_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
am_addmul_16s_16s_14ns_30_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_870_p0),
    .din1(grp_fu_870_p1),
    .din2(grp_fu_870_p2),
    .ce(1'b1),
    .dout(grp_fu_870_p3)
);

qemulator_am_submul_16s_16s_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
am_submul_16s_16s_14ns_30_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_879_p0),
    .din1(grp_fu_879_p1),
    .din2(grp_fu_879_p2),
    .ce(1'b1),
    .dout(grp_fu_879_p3)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_888_p0),
    .din1(grp_fu_888_p1),
    .ce(1'b1),
    .dout(grp_fu_888_p2)
);

qemulator_mul_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16s_16s_30_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_894_p0),
    .din1(grp_fu_894_p1),
    .ce(1'b1),
    .dout(grp_fu_894_p2)
);

qemulator_mac_muladd_16s_16s_30s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
mac_muladd_16s_16s_30s_30_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_900_p0),
    .din1(grp_fu_900_p1),
    .din2(grp_fu_888_p2),
    .ce(1'b1),
    .dout(grp_fu_900_p3)
);

qemulator_mac_muladd_16s_16s_30s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
mac_muladd_16s_16s_30s_30_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_909_p0),
    .din1(grp_fu_909_p1),
    .din2(grp_fu_894_p2),
    .ce(1'b1),
    .dout(grp_fu_909_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        action1_ap_vld_preg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            action1_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == action1_ap_vld)) begin
            action1_ap_vld_preg <= action1_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        action1_preg <= 9'd0;
    end else begin
        if ((1'b1 == action1_ap_vld)) begin
            action1_preg <= action1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        action2_ap_vld_preg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            action2_ap_vld_preg <= 1'b0;
        end else if ((1'b1 == action2_ap_vld)) begin
            action2_ap_vld_preg <= action2_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        action2_preg <= 9'd0;
    end else begin
        if ((1'b1 == action2_ap_vld)) begin
            action2_preg <= action2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_state_V_4_reg_1072 <= {{grp_fu_861_p3[29:14]}};
        output_state_V_6_reg_1077 <= {{grp_fu_879_p3[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sext_ln1319_2_reg_975 <= sext_ln1319_2_fu_264_p1;
        sext_ln1319_6_reg_1006 <= sext_ln1319_6_fu_280_p1;
        sin_hw_load_2_reg_989 <= sin_hw_q1;
        sin_hw_load_reg_958 <= sin_hw_q3;
    end
end

always @ (*) begin
    if ((1'b1 == action1_ap_vld)) begin
        action1_ap_vld_in_sig = action1_ap_vld;
    end else begin
        action1_ap_vld_in_sig = action1_ap_vld_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        action1_blk_n = action1_ap_vld;
    end else begin
        action1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == action1_ap_vld)) begin
        action1_in_sig = action1;
    end else begin
        action1_in_sig = action1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == action2_ap_vld)) begin
        action2_ap_vld_in_sig = action2_ap_vld;
    end else begin
        action2_ap_vld_in_sig = action2_ap_vld_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        action2_blk_n = action2_ap_vld;
    end else begin
        action2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == action2_ap_vld)) begin
        action2_in_sig = action2;
    end else begin
        action2_in_sig = action2_preg;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig)) & (1'b1 == ap_CS_fsm_state1))) begin
        cos_hw_ce0 = 1'b1;
    end else begin
        cos_hw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig)) & (1'b1 == ap_CS_fsm_state1))) begin
        cos_hw_ce1 = 1'b1;
    end else begin
        cos_hw_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig)) & (1'b1 == ap_CS_fsm_state1))) begin
        cos_hw_ce2 = 1'b1;
    end else begin
        cos_hw_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig)) & (1'b1 == ap_CS_fsm_state1))) begin
        cos_hw_ce3 = 1'b1;
    end else begin
        cos_hw_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        reward1_ap_vld = 1'b1;
    end else begin
        reward1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        reward2_ap_vld = 1'b1;
    end else begin
        reward2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig)) & (1'b1 == ap_CS_fsm_state1))) begin
        sin_hw_ce0 = 1'b1;
    end else begin
        sin_hw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig)) & (1'b1 == ap_CS_fsm_state1))) begin
        sin_hw_ce1 = 1'b1;
    end else begin
        sin_hw_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig)) & (1'b1 == ap_CS_fsm_state1))) begin
        sin_hw_ce2 = 1'b1;
    end else begin
        sin_hw_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig)) & (1'b1 == ap_CS_fsm_state1))) begin
        sin_hw_ce3 = 1'b1;
    end else begin
        sin_hw_ce3 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a1_V_fu_188_p4 = {{action1_in_sig[6:3]}};

assign a2_V_fu_198_p4 = {{action2_in_sig[6:3]}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((1'b0 == action2_ap_vld_in_sig) | (1'b0 == action1_ap_vld_in_sig));
end

assign cos_hw_address0 = zext_ln587_3_fu_250_p1;

assign cos_hw_address1 = zext_ln587_2_fu_232_p1;

assign cos_hw_address2 = zext_ln587_1_fu_226_p1;

assign cos_hw_address3 = zext_ln587_fu_208_p1;

assign grp_fu_708_p0 = sext_ln1319_fu_256_p1;

assign grp_fu_708_p1 = sext_ln1319_1_fu_260_p1;

assign grp_fu_715_p0 = sext_ln1319_fu_256_p1;

assign grp_fu_715_p1 = sext_ln1319_2_fu_264_p1;

assign grp_fu_722_p0 = sext_ln1319_3_fu_268_p1;

assign grp_fu_722_p1 = sext_ln1319_1_fu_260_p1;

assign grp_fu_729_p0 = sext_ln1319_3_fu_268_p1;

assign grp_fu_729_p1 = sext_ln1319_2_fu_264_p1;

assign grp_fu_736_p0 = sext_ln1319_4_fu_272_p1;

assign grp_fu_736_p1 = sext_ln1319_5_fu_276_p1;

assign grp_fu_743_p0 = sext_ln1319_4_fu_272_p1;

assign grp_fu_743_p1 = sext_ln1319_6_fu_280_p1;

assign grp_fu_750_p0 = sext_ln1319_7_fu_284_p1;

assign grp_fu_750_p1 = sext_ln1319_5_fu_276_p1;

assign grp_fu_757_p0 = sext_ln1319_7_fu_284_p1;

assign grp_fu_757_p1 = sext_ln1319_6_fu_280_p1;

assign grp_fu_764_p1 = sext_ln1319_2_reg_975;

assign grp_fu_770_p1 = sext_ln1319_2_reg_975;

assign grp_fu_776_p1 = sext_ln1319_11_fu_382_p1;

assign grp_fu_783_p1 = sext_ln1319_11_fu_382_p1;

assign grp_fu_790_p1 = sext_ln1319_6_reg_1006;

assign grp_fu_796_p1 = sext_ln1319_6_reg_1006;

assign grp_fu_802_p0 = sext_ln1319_15_fu_398_p1;

assign grp_fu_809_p1 = sext_ln1319_15_fu_398_p1;

assign grp_fu_816_p2 = 30'd11585;

assign grp_fu_825_p2 = 30'd11585;

assign grp_fu_834_p2 = 30'd11585;

assign grp_fu_843_p2 = 30'd11585;

assign grp_fu_852_p0 = sext_ln1393_fu_550_p1;

assign grp_fu_852_p1 = sext_ln1393_1_fu_554_p1;

assign grp_fu_852_p2 = 30'd11585;

assign grp_fu_861_p0 = sext_ln1394_fu_558_p1;

assign grp_fu_861_p1 = sext_ln1394_1_fu_562_p1;

assign grp_fu_861_p2 = 30'd11585;

assign grp_fu_870_p0 = sext_ln1394_fu_558_p1;

assign grp_fu_870_p1 = sext_ln1394_1_fu_562_p1;

assign grp_fu_870_p2 = 30'd11585;

assign grp_fu_879_p0 = sext_ln1393_1_fu_554_p1;

assign grp_fu_879_p1 = sext_ln1393_fu_550_p1;

assign grp_fu_879_p2 = 30'd11585;

assign grp_fu_888_p0 = sext_ln1319_18_fu_602_p1;

assign grp_fu_888_p1 = sext_ln1319_18_fu_602_p1;

assign grp_fu_894_p0 = sext_ln1319_20_fu_606_p1;

assign grp_fu_894_p1 = sext_ln1319_20_fu_606_p1;

assign grp_fu_900_p0 = sext_ln1319_19_fu_610_p1;

assign grp_fu_900_p1 = sext_ln1319_19_fu_610_p1;

assign grp_fu_909_p0 = sext_ln1319_21_fu_613_p1;

assign grp_fu_909_p1 = sext_ln1319_21_fu_613_p1;

assign output_state_V_5_fu_584_p4 = {{grp_fu_870_p3[29:14]}};

assign output_state_V_fu_566_p4 = {{grp_fu_852_p3[29:14]}};

assign quantum_state_V_1_fu_523_p4 = {{grp_fu_825_p3[29:14]}};

assign quantum_state_V_2_fu_532_p4 = {{grp_fu_834_p3[29:14]}};

assign quantum_state_V_3_fu_541_p4 = {{grp_fu_843_p3[29:14]}};

assign quantum_state_V_fu_514_p4 = {{grp_fu_816_p3[29:14]}};

assign r_V_14_fu_645_p2 = ($signed(shl_ln_fu_625_p3) + $signed(sext_ln1319_22_fu_641_p1));

assign r_V_15_fu_691_p2 = ($signed(shl_ln1319_2_fu_671_p3) + $signed(sext_ln1319_23_fu_687_p1));

assign ret_V_1_fu_242_p3 = {{trunc_ln1540_1_fu_238_p1}, {1'd0}};

assign ret_V_fu_218_p3 = {{trunc_ln1540_fu_214_p1}, {1'd0}};

assign reward1 = {{r_V_14_fu_645_p2[29:14]}};

assign reward2 = {{r_V_15_fu_691_p2[29:14]}};

assign sext_ln1319_11_fu_382_p1 = $signed(u1_V_6_fu_288_p2);

assign sext_ln1319_15_fu_398_p1 = $signed(u2_V_1_fu_329_p2);

assign sext_ln1319_18_fu_602_p1 = $signed(output_state_V_fu_566_p4);

assign sext_ln1319_19_fu_610_p1 = $signed(output_state_V_4_reg_1072);

assign sext_ln1319_1_fu_260_p0 = sin_hw_q3;

assign sext_ln1319_1_fu_260_p1 = sext_ln1319_1_fu_260_p0;

assign sext_ln1319_20_fu_606_p1 = $signed(output_state_V_5_fu_584_p4);

assign sext_ln1319_21_fu_613_p1 = $signed(output_state_V_6_reg_1077);

assign sext_ln1319_22_fu_641_p1 = $signed(shl_ln1319_1_fu_633_p3);

assign sext_ln1319_23_fu_687_p1 = $signed(shl_ln1319_3_fu_679_p3);

assign sext_ln1319_2_fu_264_p1 = $signed(cos_hw_q3);

assign sext_ln1319_3_fu_268_p1 = $signed(sin_hw_q2);

assign sext_ln1319_4_fu_272_p1 = $signed(cos_hw_q0);

assign sext_ln1319_5_fu_276_p0 = sin_hw_q1;

assign sext_ln1319_5_fu_276_p1 = sext_ln1319_5_fu_276_p0;

assign sext_ln1319_6_fu_280_p1 = $signed(cos_hw_q1);

assign sext_ln1319_7_fu_284_p1 = $signed(sin_hw_q0);

assign sext_ln1319_fu_256_p1 = $signed(cos_hw_q2);

assign sext_ln1393_1_fu_554_p1 = $signed(quantum_state_V_3_fu_541_p4);

assign sext_ln1393_fu_550_p1 = $signed(quantum_state_V_fu_514_p4);

assign sext_ln1394_1_fu_562_p1 = $signed(quantum_state_V_2_fu_532_p4);

assign sext_ln1394_fu_558_p1 = $signed(quantum_state_V_1_fu_523_p4);

assign shl_ln1319_1_fu_633_p3 = {{tmp_2_fu_616_p4}, {12'd0}};

assign shl_ln1319_2_fu_671_p3 = {{tmp_4_fu_662_p4}, {14'd0}};

assign shl_ln1319_3_fu_679_p3 = {{tmp_4_fu_662_p4}, {12'd0}};

assign shl_ln_fu_625_p3 = {{tmp_2_fu_616_p4}, {14'd0}};

assign sin_hw_address0 = zext_ln587_3_fu_250_p1;

assign sin_hw_address1 = zext_ln587_2_fu_232_p1;

assign sin_hw_address2 = zext_ln587_1_fu_226_p1;

assign sin_hw_address3 = zext_ln587_fu_208_p1;

assign st_gate_V_10_fu_437_p4 = {{grp_fu_783_p2[29:14]}};

assign st_gate_V_11_fu_446_p4 = {{grp_fu_790_p2[29:14]}};

assign st_gate_V_12_fu_455_p4 = {{grp_fu_796_p2[29:14]}};

assign st_gate_V_13_fu_464_p4 = {{grp_fu_802_p2[29:14]}};

assign st_gate_V_14_fu_473_p4 = {{grp_fu_809_p2[29:14]}};

assign st_gate_V_8_fu_419_p4 = {{grp_fu_770_p2[29:14]}};

assign st_gate_V_9_fu_428_p4 = {{grp_fu_776_p2[29:14]}};

assign st_gate_V_fu_410_p4 = {{grp_fu_764_p2[29:14]}};

assign tmp_2_fu_616_p4 = {{grp_fu_909_p3[29:14]}};

assign tmp_4_fu_662_p4 = {{grp_fu_900_p3[29:14]}};

assign trunc_ln1540_1_fu_238_p1 = action2_in_sig[2:0];

assign trunc_ln1540_fu_214_p1 = action1_in_sig[2:0];

assign u1_V_10_fu_320_p4 = {{grp_fu_729_p2[29:14]}};

assign u1_V_6_fu_288_p2 = ($signed(16'd0) - $signed(sin_hw_load_reg_958));

assign u1_V_7_fu_293_p4 = {{grp_fu_708_p2[29:14]}};

assign u1_V_8_fu_302_p4 = {{grp_fu_715_p2[29:14]}};

assign u1_V_9_fu_311_p4 = {{grp_fu_722_p2[29:14]}};

assign u2_V_1_fu_329_p2 = ($signed(16'd0) - $signed(sin_hw_load_2_reg_989));

assign u2_V_2_fu_334_p4 = {{grp_fu_736_p2[29:14]}};

assign u2_V_3_fu_343_p4 = {{grp_fu_743_p2[29:14]}};

assign u2_V_4_fu_352_p4 = {{grp_fu_750_p2[29:14]}};

assign u2_V_5_fu_361_p4 = {{grp_fu_757_p2[29:14]}};

assign zext_ln587_1_fu_226_p1 = ret_V_fu_218_p3;

assign zext_ln587_2_fu_232_p1 = a2_V_fu_198_p4;

assign zext_ln587_3_fu_250_p1 = ret_V_1_fu_242_p3;

assign zext_ln587_fu_208_p1 = a1_V_fu_188_p4;

endmodule //qemulator
